import unittest
from lib.ch274_1 import pig, append_a, indexate, goat
from lib.ch274_2 import depardie, sooner, letgos, preproces_hours

class TestStringMethods(unittest.TestCase):
    def test_task1(self):
        "ahoj" |> pig |> self.assertEqual$("ahojma")
        "bahoj" |> pig |> self.assertEqual$("ahojbma")

        ("ahoj", 3) |*> append_a |> self.assertEqual$("ahojaaa")

        [10,20,30] |> indexate |> self.assertEqual$(([10,20,30],range(1,4)))

        "I love Perl" |> goat |> self.assertEqual$("Imaa ovelmaaa erlPmaaaa")
        "Perl and Raku are friends" |> goat |> self.assertEqual$("erlPmaa andmaaa akuRmaaaa aremaaaaa riendsfmaaaaaa")
        "The Weekly Challenge" |> goat |> self.assertEqual$("heTmaa eeklyWmaaa hallengeCmaaaa")

    def test_task2_preprocess(self):
        depardie(30,5,25) |> self.assertEqual$([(5, 30), (35, 60), (65, 90)])
        sooner([(35, 70), (47, 88), (50, 85), (59, 100)], (35, 76)) |> self.assertEqual$((35,76))
        sooner([(35, 70), (47, 88), (50, 55), (59, 100)], (30, 60)) |> self.assertEqual$((50,55)) # u better wait for the bus that leaves :50
        sooner([(47, 88), (50, 85), (59, 75)], (35, 76)) |> self.assertEqual$((59,75)) # wait for :59, do not enter :35

        depardie(12,11,41) + depardie(15,5,35) |> sorted$(key = x => x[0]) |> letgos |> self.assertEqual$([(35, 47)])
        depardie(12,3,41) + depardie(15,9,35) + depardie(30,5,25) |> sorted$(key = x => x[0]) |> letgos |> self.assertEqual$([(0, 3), (24, 27), (39, 51), (54, 3)])

        (54,3) |> preproces_hours |> self.assertEqual$(range(55,60))
        (0,3) |> preproces_hours |> self.assertEqual$(range(0,4))
        (1,5) |> preproces_hours |> self.assertEqual$(range(2,6))

    
    def test_task2(self):
        # Example 1
        ex1 = depardie(12,11,41) + depardie(15,5,35) |> sorted$(key = x => x[0])
        letgos(ex1) |> fmap$(preproces_hours) |> fmap$(list) |> flatten |> list |> self.assertEqual$([36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47])

        # Example 2
        ex2 = depardie(12,3,41) + depardie(15,9,35) + depardie(30,5,25) |> sorted$(key = x => x[0]) 
        letgos(ex2) |> fmap$(preproces_hours) |> fmap$(list) |> flatten |> list |> self.assertEqual$([0, 1, 2, 3, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59])
        



if __name__ == '__main__':
    unittest.main()

